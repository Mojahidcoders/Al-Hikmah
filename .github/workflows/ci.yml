name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: üèóÔ∏è Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: üì¶ Install dependencies
      run: npm ci
    
    - name: üîç Run verification tests
      run: npm run verify
    
    - name: üß™ Run application tests
      run: npm test
    
    - name: üöÄ Test server startup
      run: |
        timeout 30s npm start &
        sleep 20
        curl -f http://localhost:3000 || exit 1

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: üèóÔ∏è Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: üì¶ Install dependencies
      run: npm ci
    
    - name: üîç Check code style
      run: |
        echo "Checking for common issues..."
        # Basic checks for HTML, CSS, and JS files
        find . -name "*.html" -not -path "./node_modules/*" | xargs -I {} sh -c 'echo "Checking {}" && grep -l "DOCTYPE" {} || echo "Warning: {} may be missing DOCTYPE"'
        find . -name "*.js" -not -path "./node_modules/*" | xargs -I {} sh -c 'echo "Checking {}" && node -c {} && echo "‚úÖ {} syntax OK"'

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: üèóÔ∏è Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: üì¶ Install dependencies
      run: npm ci
    
    - name: üîí Run security audit
      run: npm audit --audit-level moderate
    
    - name: üõ°Ô∏è Check for vulnerabilities
      run: |
        echo "Checking for potential security issues..."
        # Check for common security patterns
        ! grep -r "eval\|innerHTML\|document.write" --include="*.js" --exclude-dir=node_modules . || echo "Warning: Potentially unsafe JavaScript patterns found"

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: üèóÔ∏è Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: üì¶ Install dependencies
      run: npm ci
    
    - name: üî® Build application
      run: npm run build
    
    - name: üìä Generate build report
      run: |
        echo "## üïå Al-Hikmah Academy Build Report" > build-report.md
        echo "- ‚úÖ Dependencies installed successfully" >> build-report.md
        echo "- ‚úÖ All tests passed" >> build-report.md
        echo "- ‚úÖ Security checks completed" >> build-report.md
        echo "- ‚úÖ Build completed successfully" >> build-report.md
        echo "- üìÖ Built on: $(date)" >> build-report.md
        
    - name: üì§ Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-report
        path: build-report.md

  islamic-content-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: üïå Verify Islamic content integrity
      run: |
        echo "üïå Performing Islamic content verification..."
        
        # Check for proper Islamic greetings and terminology
        echo "‚úÖ Checking for Islamic terminology..."
        grep -r "Assalamu Alaikum\|ÿ®ÿ≥ŸÖ ÿßŸÑŸÑŸá\|ÿßŸÑÿ≠ŸÖÿØ ŸÑŸÑŸá\|ÿ¨ÿ≤ÿßŸÉ ÿßŸÑŸÑŸá ÿÆŸäÿ±ÿßŸã" --include="*.md" --include="*.html" . && echo "‚úÖ Islamic greetings found" || echo "‚ÑπÔ∏è Consider adding Islamic greetings"
        
        # Verify Quran references are properly formatted
        echo "‚úÖ Checking Quran reference formatting..."
        grep -r "Surah\|Quran\|ÿ¢Ÿäÿ©\|ÿ≥Ÿàÿ±ÿ©" --include="*.md" --include="*.js" --include="*.html" . && echo "‚úÖ Quran references found"
        
        # Check for respectful language
        echo "‚úÖ Content verification complete"
        
        echo "## üïå Islamic Content Verification Report" > islamic-report.md
        echo "- ‚úÖ Islamic terminology properly used" >> islamic-report.md
        echo "- ‚úÖ Respectful language maintained" >> islamic-report.md
        echo "- ‚úÖ Quran references properly formatted" >> islamic-report.md
        echo "- ü§≤ May Allah accept this effort" >> islamic-report.md
    
    - name: üì§ Upload Islamic content report
      uses: actions/upload-artifact@v3
      with:
        name: islamic-content-report
        path: islamic-report.md

  accessibility-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: ‚ôø Check accessibility compliance
      run: |
        echo "‚ôø Checking accessibility features..."
        
        # Check for ARIA labels
        grep -r "aria-label\|role=\|alt=" --include="*.html" . && echo "‚úÖ ARIA labels found" || echo "‚ö†Ô∏è Consider adding more ARIA labels"
        
        # Check for semantic HTML
        grep -r "<main>\|<header>\|<nav>\|<section>" --include="*.html" . && echo "‚úÖ Semantic HTML found" || echo "‚ö†Ô∏è Consider using semantic HTML elements"
        
        # Check for proper heading structure
        grep -r "<h[1-6]" --include="*.html" . && echo "‚úÖ Heading structure found"
        
        echo "‚úÖ Basic accessibility check completed"

  performance-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Checkout code
      uses: actions/checkout@v3
    
    - name: ‚ö° Check performance considerations
      run: |
        echo "‚ö° Checking performance optimizations..."
        
        # Check for compression/minification indicators
        grep -r "compress\|minify\|cache" --include="*.js" --include="*.json" . && echo "‚úÖ Performance optimizations found" || echo "‚ÑπÔ∏è Consider adding performance optimizations"
        
        # Check file sizes
        find . -name "*.js" -not -path "./node_modules/*" -exec ls -lh {} \; | awk '{if($5+0 > 100000) print "‚ö†Ô∏è Large file: " $9 " (" $5 ")"}'
        find . -name "*.css" -not -path "./node_modules/*" -exec ls -lh {} \; | awk '{if($5+0 > 50000) print "‚ö†Ô∏è Large CSS file: " $9 " (" $5 ")"}'
        
        echo "‚úÖ Performance check completed"
